peripheral:
  $extends: periph.inc | peripheral
  name: TIM1
  desc: Advanced-control timer
  base: 0x40012C00
  registers:
    CR1:
      desc: Control register 1
      offset: 0x0
      size: 16
      fields:
        CEN:
          desc: Counter enable
          bits: 0
        UDIS:
          desc: Update disable
          bits: 1
        URS:
          desc: Update request source
          bits: 2
        OPM:
          desc: One pulse mode
          bits: 3
        DIR:
          desc: Direction
          bits: 4
        CMS:
          desc: Center-aligned mode selection
          bits: 6-5
          enum:
            EDGE_ALIGNED_MODE:
              desc: |
                Edge-aligned mode. The counter counts up or down depending on the direction bit
                (DIR).
              val: 0
            CENTER_ALIGNED_MODE1:
              desc: |
                Center-aligned mode 1. The counter counts up and down alternatively. Output compare
                interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register)
                are set only when the counter is counting down.
              val: 1
            CENTER_ALIGNED_MODE2:
              desc: |
                Center-aligned mode 2. The counter counts up and down alternatively. Output compare
                interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register)
                are set only when the counter is counting up.
              val: 2
            CENTER_ALIGNED_MODE3:
              desc: |
                Center-aligned mode 3. The counter counts up and down alternatively. Output compare
                interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register)
                are set both when the counter is counting up or down.
              val: 3
        ARPE:
          desc: Auto-reload preload enable
          bits: 7
        CKD:
          desc: Clock division
          bits: 9-8
          enum:
            '1':
              desc: tDTS = tCK_INT
              val: 0
            '2':
              desc: tDTS = 2 * tCK_INT
              val: 1
            '4':
              desc: tDTS = 4 * tCK_INT
              val: 2
    CR2:
      desc: Control register 2
      offset: 0x4
      size: 16
      fields:
        CCPC:
          desc: Capture/compare preloaded control
          bits: 0
        CCUS:
          desc: Capture/compare control update selection
          bits: 2
        CCDS:
          desc: Capture/compare DMA selection
          bits: 3
        MMS:
          desc: Master mode selection
          bits: 6-4
          enum:
            RESET:
              desc: Reset - the UG bit from the TIMx_EGR register is used as trigger output (TRGO).
              val: 0
            ENABLE:
              desc: Enable - the Counter Enable signal CNT_EN is used as trigger output (TRGO).
              val: 1
            UPDATE:
              desc: Update - The update event is selected as trigger output (TRGO).
              val: 2
            COMPARE_PULSE:
              desc: |
                Compare Pulse - The trigger output send a positive pulse when the CC1IF flag is to
                be set (even if it was already high), as soon as a capture or a compare match
                occurred.
              val: 3
            CMP_OC1REF:
              desc: Compare - OC1REF signal is used as trigger output (TRGO)
              val: 4
            CMP_OC2REF:
              desc: Compare - OC2REF signal is used as trigger output (TRGO)
              val: 5
            CMP_OC3REF:
              desc: Compare - OC3REF signal is used as trigger output (TRGO)
              val: 6
            CMP_OC4REF:
              desc: Compare - OC4REF signal is used as trigger output (TRGO)
              val: 7
        TI1S:
          desc: TI1 selection
          bits: 7
        OIS1:
          desc: Output Idle state 1 (OC1 output)
          bits: 8
        OIS1N:
          desc: Output Idle state 1 (OC1N output)
          bits: 9
        OIS2:
          desc: Output Idle state 2 (OC1 output)
          bits: 10
        OIS2N:
          desc: Output Idle state 2 (OC1N output)
          bits: 11
        OIS3:
          desc: Output Idle state 3 (OC1 output)
          bits: 12
        OIS3N:
          desc: Output Idle state 3 (OC1N output)
          bits: 13
        OIS4:
          desc: Output Idle state 4 (OC1 output)
          bits: 14
    SMCR:
      desc: Slave mode control register
      offset: 0x8
      size: 16
      fields:
        SMS:
          desc: Slave mode selection
          bits: 2-0
          enum:
            DISABLED:
              desc: |
                Slave mode disabled - if CEN = ‘1’ then the prescaler is clocked directly by the
                internal clock.
              val: 0
            ENCODER_MODE_1:
              desc: |
                Encoder mode 1 - Counter counts up/down on TI2FP1 edge depending on TI1FP2 level.
              val: 1
            ENCODER_MODE_2:
              desc: |
                Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level.
              val: 2
            ENCODER_MODE_3:
              desc: |
                Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending
                on the level of the other input.
              val: 3
            RESET_MODE:
              desc: |
                Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the
                counter and generates an update of the registers.
              val: 4
            GATED_MODE:
              desc: |
                Gated Mode - The counter clock is enabled when the trigger input (TRGI) is high.
                The counter stops (but is not reset) as soon as the trigger becomes low. Both start
                and stop of the counter are controlled.
              val: 5
            TRIGGER_MODE:
              desc: |
                Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is
                not reset). Only the start of the counter is controlled.
              val: 6
            EXTERNAL_CLOCK_MODE_1:
              desc: Rising edges of the selected trigger (TRGI) clock the counter.
              val: 7
        TS:
          desc: Trigger selection
          bits: 6-4
          enum:
            ITR0:
              desc: Internal Trigger 0 (ITR0)
              val: 0
            ITR1:
              desc: Internal Trigger 1 (ITR1)
              val: 1
            ITR2:
              desc: Internal Trigger 2 (ITR2)
              val: 2
            ITR3:
              desc: Internal Trigger 3 (ITR3)
              val: 3
            TI1F_ED:
              desc: TI1 Edge Detector (TI1F_ED)
              val: 4
            TI1FP1:
              desc: Filtered Timer Input 1 (TI1FP1)
              val: 5
            TI2FP2:
              desc: Filtered Timer Input 2 (TI2FP2)
              val: 6
            ETRF:
              desc: External Trigger input (ETRF)
              val: 7
        MSM:
          desc: Master/slave mode
          bits: 7
        ETF: &ETF
          desc: External trigger filter
          bits: 11-8
          enum:
            DISABLED:
              desc: No filter, sampling is done at fDTS
              val: 0
            CK_INT_N2:
              desc: fSAMPLING = fCK_INT, N = 2
              val: 1
            CK_INT_N4:
              desc: fSAMPLING = fCK_INT, N = 4
              val: 2
            CK_INT_N8:
              desc: fSAMPLING = fCK_INT, N = 8
              val: 3
            DTS_DIV2_N6:
              desc: fSAMPLING = fDTS / 2, N = 6
              val: 4
            DTS_DIV2_N8:
              desc: fSAMPLING = fDTS / 2, N = 8
              val: 5
            DTS_DIV4_N6:
              desc: fSAMPLING = fDTS / 4, N = 6
              val: 6
            DTS_DIV4_N8:
              desc: fSAMPLING = fDTS / 4, N = 8
              val: 7
            DTS_DIV8_N6:
              desc: fSAMPLING = fDTS / 8, N = 6
              val: 8
            DTS_DIV8_N8:
              desc: fSAMPLING = fDTS / 8, N = 8
              val: 9
            DTS_DIV16_N5:
              desc: fSAMPLING = fDTS / 16, N = 5
              val: 10
            DTS_DIV16_N6:
              desc: fSAMPLING = fDTS / 16, N = 6
              val: 11
            DTS_DIV16_N8:
              desc: fSAMPLING = fDTS / 16, N = 8
              val: 12
            DTS_DIV32_N5:
              desc: fSAMPLING = fDTS / 32, N = 5
              val: 13
            DTS_DIV32_N6:
              desc: fSAMPLING = fDTS / 32, N = 6
              val: 14
            DTS_DIV32_N8:
              desc: fSAMPLING = fDTS / 32, N = 8
              val: 15
        ETPS:
          desc: External trigger prescaler
          bits: 13-12
          enum:
            DISABLED:
              desc: Prescaler OFF
              val: 0
            ETRP_DIV2:
              desc: ETRP frequency divided by 2
              val: 1
            ETRP_DIV4:
              desc: ETRP frequency divided by 4
              val: 2
            ETRP_DIV8:
              desc: ETRP frequency divided by 8
              val: 3
        ECE:
          desc: External clock enable
          bits: 14
        ETP:
          desc: External trigger polarity
          bits: 15
    DIER:
      desc: DMA/interrupt enable register
      offset: 0xC
      size: 16
      fields:
        UIE:
          desc: Update interrupt enable
          bits: 0
        CC1IE:
          desc: Capture/Compare 1 interrupt enable
          bits: 1
        CC2IE:
          desc: Capture/Compare 2 interrupt enable
          bits: 2
        CC3IE:
          desc: Capture/Compare 3 interrupt enable
          bits: 3
        CC4IE:
          desc: Capture/Compare 4 interrupt enable
          bits: 4
        COMIE:
          desc: COM interrupt enable
          bits: 5
        TIE:
          desc: Trigger interrupt enable
          bits: 6
        BIE:
          desc: Break interrupt enable
          bits: 7
        UDE:
          desc: Update DMA request enable
          bits: 8
        CC1DE:
          desc: Capture/Compare 1 DMA request enable
          bits: 9
        CC2DE:
          desc: Capture/Compare 2 DMA request enable
          bits: 10
        CC3DE:
          desc: Capture/Compare 3 DMA request enable
          bits: 11
        CC4DE:
          desc: Capture/Compare 4 DMA request enable
          bits: 12
        COMDE:
          desc: COM DMA request enable
          bits: 13
        TDE:
          desc: Trigger DMA request enable
          bits: 14
    SR:
      desc: Status register
      offset: 0x10
      size: 16
      fields:
        UIF:
          desc: Update interrupt flag
          bits: 0
        CC1IF:
          desc: Capture/Compare 1 interrupt flag
          bits: 1
        CC2IF:
          desc: Capture/Compare 2 interrupt flag
          bits: 2
        CC3IF:
          desc: Capture/Compare 3 interrupt flag
          bits: 3
        CC4IF:
          desc: Capture/Compare 4 interrupt flag
          bits: 4
        COMIF:
          desc: COM interrupt flag
          bits: 5
        TIF:
          desc: Trigger interrupt flag
          bits: 6
        BIF:
          desc: Break interrupt flag
          bits: 7
        CC1OF:
          desc: Capture/Compare 1 overcapture flag
          bits: 9
        CC2OF:
          desc: Capture/Compare 2 overcapture flag
          bits: 10
        CC3OF:
          desc: Capture/Compare 3 overcapture flag
          bits: 11
        CC4OF:
          desc: Capture/Compare 4 overcapture flag
          bits: 12
    EGR:
      desc: Event generation register
      offset: 0x14
      size: 16
      fields:
        UG:
          desc: Update generation
          bits: 0
        CC1G:
          desc: Capture/Compare 1 generation
          bits: 1
        CC2G:
          desc: Capture/Compare 2 generation
          bits: 2
        CC3G:
          desc: Capture/Compare 3 generation
          bits: 3
        CC4G:
          desc: Capture/Compare 4 generation
          bits: 4
        COMG:
          desc: Capture/Compare control update generation
          bits: 5
        TG:
          desc: Trigger generation
          bits: 6
        BG:
          desc: Break generation
          bits: 7
    CCMR1:
      desc: Capture/compare mode register 1
      offset: 0x18
      size: 16
      fields:
        CC1S: &CC1S
          desc: Capture/Compare 1 selection
          bits: 1-0
          enum:
            OUTPUT:
              desc: CCy channel is configured as output
              val: 0
            INPUT_TI1:
              desc: CCy channel is configured as input, IC1 is mapped on TI1
              val: 1
            INPUT_TI2:
              desc: CCy channel is configured as input, IC1 is mapped on TI2
              val: 2
            INPUT_TRC:
              desc: CCy channel is configured as input, IC1 is mapped on TRC
              val: 3
        OC1FE: &OC1FE
          desc: Output Compare y fast enable
          bits: 2
        OC1PE: &OC1PE
          desc: Output Compare y preload enable
          bits: 3
        OC1M: &OC1M
          desc: Output Compare y mode
          bits: 6-4
          enum:
            FROZEN:
              desc: |
                The comparison between the output compare register TIMx_CCRy and the counter
                TIMx_CNT has no effect on the outputs.(this mode is used to generate a timing base).
              val: 0
            ACTIVE:
              desc: Set channel to active level on match.
              val: 1
            INACTIVE:
              desc: Set channel to inactive level on match.
              val: 2
            TOGGLE:
              desc: OCyREF toggles when TIMx_CNT = TIMx_CCRy
              val: 3
            FORCE_INACTIVE:
              desc: Force inactive level - OCyREF is forced low.
              val: 4
            FORCE_ACTIVE:
              desc: Force active level - OCyREF is forced high.
              val: 5
            PWM_MODE_1:
              desc: |
                PWM mode 1 - In upcounting, channel y is active as long as TIMx_CNT < TIMx_CCRy else
                inactive. In downcounting, channel y is inactive (OC1REF=‘0’) as long as
                TIMx_CNT > TIMx_CCRy else active (OCyREF=’1’).
              val: 6
            PWM_MODE_2:
              desc: |
                PWM mode 2 - In upcounting, channel y is inactive as long as TIMx_CNT < TIMx_CCRy
                else active. In downcounting, channel y is active as long as TIMx_CNT > TIMx_CCRy
                else inactive.
              val: 7
        OC1CE: &OC1CE
          desc: Output Compare y clear enable
          bits: 7
        CC2S: &CC2S
          <<: *CC1S
          desc: Capture/Compare y selection
          bits: 9-8
        OC2FE: &OC2FE
          desc: Output Compare y fast enable
          bits: 10
        OC2PE: &OC2PE
          desc: Output Compare y preload enable
          bits: 11
        OC2M: &OC2M
          <<: *OC1M
          desc: Output Compare y mode
          bits: 14-12
        OC2CE: &OC2CE
          desc: Output Compare y clear enable
          bits: 15
        IC1PSC: &IC1PSC
          desc: Input capture y prescaler
          bits: 3-2
          enum:
            DISABLED:
              desc: No prescaler, capture is done each time an edge is detected on the capture input
              val: 0
            '2':
              desc: Capture is done once every 2 events
              val: 1
            '4':
              desc: Capture is done once every 4 events
              val: 2
            '8':
              desc: Capture is done once every 8 events
              val: 3
        IC1F: &IC1F
          <<: *ETF
          desc: Input capture y filter
          bits: 7-4
        IC2PSC: &IC2PSC
          <<: *IC1PSC
          bits: 11-10
        IC2F: &IC2F
          <<: *IC1F
          bits: 15-12
    CCMR2:
      desc: Capture/compare mode register 2
      offset: 0x1C
      size: 16
      fields:
        CC3S:
          <<: *CC1S
        OC3FE:
          <<: *OC1FE
        OC3PE:
          <<: *OC1PE
        OC3M:
          <<: *OC1M
        OC3CE:
          <<: *OC1CE
        CC4S:
          <<: *CC2S
        OC4FE:
          <<: *OC2FE
        OC4PE:
          <<: *OC2PE
        OC4M:
          <<: *OC2M
        OC4CE:
          <<: *OC2CE
        IC3PSC:
          <<: *IC1PSC
        IC3F:
          <<: *IC1F
        IC4PSC:
          <<: *IC2PSC
        IC4F:
          <<: *IC2F
    CCER:
      desc: Capture/compare mode register 2
      offset: 0x20
      size: 16
      fields:
        CC1E:
          desc: Capture/Compare y output enable
          bits: 0
        CC1P:
          desc: Capture/Compare y output polarity
          bits: 1
        CC1NE:
          desc: Capture/Compare y complementary output enable
          bits: 2
        CC1NP:
          desc: Capture/Compare y complementary output polarity
          bits: 3
        CC2E:
          desc: Capture/Compare y output enable
          bits: 4
        CC2P:
          desc: Capture/Compare y output polarity
          bits: 5
        CC2NE:
          desc: Capture/Compare y complementary output enable
          bits: 6
        CC2NP:
          desc: Capture/Compare y complementary output polarity
          bits: 7
        CC3E:
          desc: Capture/Compare y output enable
          bits: 8
        CC3P:
          desc: Capture/Compare y output polarity
          bits: 9
        CC3NE:
          desc: Capture/Compare y complementary output enable
          bits: 10
        CC3NP:
          desc: Capture/Compare 3 complementary output polarity
          bits: 11
        CC4E:
          desc: Capture/Compare 4 output enable
          bits: 12
        CC4P:
          desc: Capture/Compare 4 output polarity
          bits: 13
    CNT:
      desc: Counter
      offset: 0x24
      size: 16
    PSC:
      desc: Prescaler
      offset: 0x28
      size: 16
    ARR:
      desc: Auto-reload register
      offset: 0x2C
      size: 16
      reset_val: 0xFFFF
    RCR:
      desc: Repetition counter register
      offset: 0x30
      size: 16
    CCR1:
      desc: Capture/compare register 1
      offset: 0x34
      size: 16
    CCR2:
      desc: Capture/compare register 2
      offset: 0x38
      size: 16
    CCR3:
      desc: Capture/compare register 3
      offset: 0x3C
      size: 16
    CCR4:
      desc: Capture/compare register 4
      offset: 0x40
      size: 16
    BDTR:
      desc: Break and dead-time register
      offset: 0x44
      size: 16
      fields:
        DTG:
          desc: Dead-time generator setup
          bits: 7-0
        LOCK:
          desc: Lock configuration
          bits: 9-8
          enum:
            DISABLED:
              desc: No bit is write protected.
              val: 0
            LEVEL_1:
              desc: |
                LOCK Level 1 = DTG bits in TIMx_BDTR register, OISx and OISxN bits in TIMx_CR2
                register and BKE/BKP/AOE bits in TIMx_BDTR register can no longer be written.
              val: 1
            LEVEL_2:
              desc: |
                LOCK Level 2 = LOCK Level 1 + CC Polarity bits (CCxP/CCxNP bits in TIMx_CCER
                register, as long as the related channel is configured in output through the CCxS
                bits) as well as OSSR and OSSI bits can no longer be written.
              val: 2
            LEVEL_3:
              desc: |
                LOCK Level 3 = LOCK Level 2 + CC Control bits (OCxM and OCxPE bits in TIMx_CCMRx
                registers, as long as the related channel is configured in output through the CCxS
                bits) can no longer be written.
              val: 3
        OSSI:
          desc: Off-state selection for Idle mode
          bits: 10
        OSSR:
          desc: Off-state selection for Run mode
          bits: 11
        BKE:
          desc: Break enable
          bits: 12
        BKP:
          desc: Break polarity
          bits: 13
        AOE:
          desc: Automatic output enable
          bits: 14
        MOE:
          desc: Main output enable
          bits: 15
    DCR:
      desc: DMA control register
      offset: 0x48
      size: 16
      fields:
        DBA:
          desc: DMA base address
          bits: 4-0
        DBL:
          desc: DMA burst length
          bits: 12-8
    DCR:
      desc: DMA address for full transfer
      offset: 0x4C
      size: 32
